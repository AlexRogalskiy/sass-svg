@import '../node_modules/sassdash/index';
@import 'utils/encode';

$_SVG_STACK: null !global;

@mixin svg($type, $attrs) {
  $previous: $_SVG_STACK;
  $_SVG_STACK: () !global;

  test: foo;

  @content;

  $element: (
    type: $type,
    attrs: $attrs,
    children: $_SVG_STACK
  );

  @debug $element;

  @if $previous != null {  
    $_SVG_STACK: $previous !global;

    $_SVG_STACK: append($_SVG_STACK, $element) !global;
  } @else {
    $root-element: (
      type: 'svg',
      attrs: (
        xmlns: 'http://www.w3.org/2000/svg'),
      children: ($element,));

    background: url('"data:image/svg+xml;charset=utf8,'
      + encode(svg-render($root-element))
      + '")');

    $_SVG_STACK: null !global;
  }
}

@function svg-render($element, $args...) {
  $type: _get($element, 'type');
  $attrs: _($element,
    _get 'attrs',
    _map svg-render-attr,
    _join ' ');
  $children: if(length(_get($element, 'children')) > 0,
    _($element,
      _get 'children',
      _map svg-render,
      _join),
    ());

  @return if(length($children) > 0,
    '<#{$type} #{$attrs}>#{$children}</#{$type}>',
    '<#{$type} #{$attrs}/>');
}

@function svg-render-attr($value, $key, $args...) {
  @return unquote('#{$key}="#{$value}"');
}

@function _svg-escape-quotes($string) {
  @return _replace($string, '"', '\\"');
}

@function _svg-escape-uri($string) {
  @return _($string,
    _replace '&' '%26',
    _replace '')
}

// @include svg(foo, (a: 1)) {
//   @include svg(bar, (a: 2)) {
//     @include svg(baz, (a: 3));
//     @include svg(bam, (a: 4));
//   }

//   @include svg(test, (a: 5));
// }
